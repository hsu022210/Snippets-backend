openapi: 3.0.3
info:
  title: Snippets API
  version: 1.0.0
  description: A simple API for managing code snippets.
paths:
  /auth/login/:
    post:
      operationId: auth_login_create
      description: Authenticate user with email and password, returning JWT access
        and refresh tokens.
      summary: User Login
      tags:
      - Authentication
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  description: User's email address
                password:
                  type: string
                  description: User's password
                  minLength: 1
              required:
              - email
              - password
            examples:
              ValidLogin:
                value:
                  email: john@example.com
                  password: securepassword123
                summary: Valid Login
                description: Example of valid login credentials
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: Login successful
        '400':
          description: Missing credentials
        '401':
          description: Invalid credentials
  /auth/login/refresh/:
    post:
      operationId: auth_login_refresh_create
      description: Refresh an expired JWT access token using a valid refresh token.
      summary: Refresh JWT Token
      tags:
      - Authentication
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                refresh:
                  type: string
                  description: Valid refresh token
              required:
              - refresh
            examples:
              TokenRefreshRequest:
                value:
                  refresh: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...
                summary: Token Refresh Request
                description: Example of token refresh request
      security:
      - {}
      responses:
        '200':
          description: Token refreshed successfully
        '400':
          description: Invalid refresh token
        '401':
          description: Token validation failed
  /auth/logout/:
    post:
      operationId: auth_logout_create
      description: 'Logout the authenticated user. Note: JWT tokens are stateless,
        so the client should handle token removal.'
      summary: User Logout
      tags:
      - Authentication
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: Successfully logged out
        '400':
          description: Logout failed
        '401':
          description: Authentication required
  /auth/password-reset/:
    post:
      operationId: auth_password_reset_create
      description: Send a password reset email to the user's email address with a
        reset link.
      summary: Request Password Reset
      tags:
      - Authentication
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  description: User's email address
              required:
              - email
            examples:
              PasswordResetRequest:
                value:
                  email: john@example.com
                summary: Password Reset Request
                description: Example of password reset request
      responses:
        '200':
          description: Password reset email sent successfully
        '400':
          description: Invalid email or user not found
  /auth/password-reset/confirm/:
    post:
      operationId: auth_password_reset_confirm_create
      description: Confirm password reset using the token from the reset email and
        set a new password.
      summary: Confirm Password Reset
      tags:
      - Authentication
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: Password reset token from email
                password:
                  type: string
                  description: New password
                  minLength: 8
              required:
              - token
              - password
            examples:
              PasswordResetConfirmation:
                value:
                  token: abc123def456
                  password: newsecurepassword123
                summary: Password Reset Confirmation
                description: Example of password reset confirmation
      responses:
        '200':
          description: Password reset successful
        '400':
          description: Invalid token or password
  /auth/register/:
    post:
      operationId: auth_register_create
      description: Create a new user account with email verification and welcome email.
      summary: Register New User
      tags:
      - Authentication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
            examples:
              ValidRegistration:
                value:
                  username: john_doe
                  email: john@example.com
                  password: securepassword123
                  password2: securepassword123
                  first_name: John
                  last_name: Doe
                summary: Valid Registration
                description: Example of valid registration data
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '201':
          description: User successfully registered
        '400':
          description: Invalid registration data
        '500':
          description: Internal server error
  /contact/:
    post:
      operationId: contact_create
      description: Send a contact message to the site owner. Accepts name, email, subject, and message. Sends an email to the configured recipient.
      summary: Contact Form Submission
      tags:
      - Contact
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Sender's name
                  maxLength: 150
                email:
                  type: string
                  format: email
                  description: Sender's email address
                subject:
                  type: string
                  description: Subject of the message
                message:
                  type: string
                  description: The message content
              required:
              - name
              - email
              - subject
              - message
            examples:
              ContactExample:
                value:
                  name: John Doe
                  email: john@example.com
                  subject: Inquiry
                  message: Hello, I have a question about your site.
                summary: Example Contact Message
                description: Example of a contact form submission
        required: true
      responses:
        '200':
          description: Message sent successfully
        '400':
          description: Invalid input data
        '500':
          description: Internal server error
  /auth/user/:
    get:
      operationId: auth_user_retrieve
      description: Retrieve and update the authenticated user's profile information.
      summary: User Profile
      tags:
      - Authentication
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: User profile retrieved successfully
        '401':
          description: Authentication required
    put:
      operationId: auth_user_update
      description: Retrieve and update the authenticated user's profile information.
      summary: User Profile
      tags:
      - Authentication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: User profile retrieved successfully
        '401':
          description: Authentication required
    patch:
      operationId: auth_user_partial_update
      description: Retrieve and update the authenticated user's profile information.
      summary: User Profile
      tags:
      - Authentication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: User profile retrieved successfully
        '401':
          description: Authentication required
  /snippets/:
    get:
      operationId: snippets_list
      description: Retrieve a paginated list of code snippets. Authenticated users
        see their own snippets, while unauthenticated users see all public snippets.
      summary: List Snippets
      parameters:
      - in: query
        name: created_after
        schema:
          type: string
        description: 'Filter snippets created after this date (ISO format: YYYY-MM-DDTHH:MM:SSZ)'
        examples:
          AfterDate:
            value: '2024-01-01T00:00:00Z'
            summary: After Date
      - in: query
        name: created_before
        schema:
          type: string
        description: 'Filter snippets created before this date (ISO format: YYYY-MM-DDTHH:MM:SSZ)'
        examples:
          BeforeDate:
            value: '2024-12-31T23:59:59Z'
            summary: Before Date
      - in: query
        name: language
        schema:
          type: string
        description: Filter snippets by programming language (case-insensitive)
        examples:
          Python:
            value: python
          JavaScript:
            value: javascript
          Java:
            value: java
      - in: query
        name: page
        schema:
          type: integer
        description: Page number for pagination
        examples:
          Page1:
            value: 1
            summary: Page 1
          Page2:
            value: 2
            summary: Page 2
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: search_code
        schema:
          type: string
        description: Search snippets by code content (case-insensitive)
        examples:
          SearchCode:
            value: print
            summary: Search Code
      - in: query
        name: search_title
        schema:
          type: string
        description: Search snippets by title (case-insensitive)
        examples:
          SearchTitle:
            value: hello world
            summary: Search Title
      tags:
      - Snippets
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: Snippets retrieved successfully
        '401':
          description: Authentication required
    post:
      operationId: snippets_create
      description: Create a new code snippet. The snippet will be automatically associated
        with the authenticated user.
      summary: Create Snippet
      tags:
      - Snippets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SnippetRequest'
            examples:
              ValidSnippet:
                value:
                  title: Hello World in Python
                  code: print('Hello, World!')
                  linenos: false
                  language: python
                  style: friendly
                summary: Valid Snippet
                description: Example of valid snippet data
              JavaScriptSnippet:
                value:
                  title: JavaScript Function
                  code: |-
                    function greet(name) {
                        return `Hello, ${name}!`;
                    }
                  linenos: true
                  language: javascript
                  style: monokai
                summary: JavaScript Snippet
                description: Example of JavaScript snippet with line numbers
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SnippetRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SnippetRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          description: Snippet created successfully
        '400':
          description: Invalid snippet data
        '401':
          description: Authentication required
  /snippets/{id}/:
    get:
      operationId: snippets_retrieve
      description: Retrieve a specific code snippet by ID.
      summary: Get Snippet
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this snippet.
        required: true
      tags:
      - Snippets
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: Snippet retrieved successfully
        '404':
          description: Resource not found
    put:
      operationId: snippets_update
      description: Update an existing code snippet. Only the snippet owner can update
        it.
      summary: Update Snippet
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this snippet.
        required: true
      tags:
      - Snippets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SnippetRequest'
            examples:
              UpdateSnippet:
                value:
                  title: Updated Hello World
                  code: print('Hello, Updated World!')
                  linenos: true
                  language: python
                  style: friendly
                summary: Update Snippet
                description: Example of snippet update data
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SnippetRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SnippetRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: Snippet updated successfully
        '400':
          description: Invalid snippet data
        '401':
          description: Authentication required
        '403':
          description: Permission denied
        '404':
          description: Resource not found
    patch:
      operationId: snippets_partial_update
      description: Update an existing code snippet. Only the snippet owner can update
        it.
      summary: Update Snippet
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this snippet.
        required: true
      tags:
      - Snippets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSnippetRequest'
            examples:
              UpdateSnippet:
                value:
                  title: Updated Hello World
                  code: print('Hello, Updated World!')
                  linenos: true
                  language: python
                  style: friendly
                summary: Update Snippet
                description: Example of snippet update data
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSnippetRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSnippetRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: Snippet updated successfully
        '400':
          description: Invalid snippet data
        '401':
          description: Authentication required
        '403':
          description: Permission denied
        '404':
          description: Resource not found
    delete:
      operationId: snippets_destroy
      description: Delete a code snippet. Only the snippet owner can delete it.
      summary: Delete Snippet
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this snippet.
        required: true
      tags:
      - Snippets
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: Snippet deleted successfully
        '401':
          description: Authentication required
        '403':
          description: Permission denied
        '404':
          description: Resource not found
  /snippets/{id}/highlight/:
    get:
      operationId: snippets_highlight_retrieve
      description: Get syntax-highlighted HTML representation of a code snippet.
      summary: Highlight Snippet
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this snippet.
        required: true
      tags:
      - Snippets
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: Highlighted snippet HTML
        '404':
          description: Resource not found
  /users/:
    get:
      operationId: users_list
      description: Retrieve a paginated list of users. Only authenticated users can
        access this endpoint.
      summary: List Users
      parameters:
      - in: query
        name: page
        schema:
          type: integer
        description: Page number for pagination
        examples:
          Page1:
            value: 1
            summary: Page 1
          Page2:
            value: 2
            summary: Page 2
      tags:
      - Users
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: Users retrieved successfully
        '401':
          description: Authentication required
  /users/{id}/:
    get:
      operationId: users_retrieve
      description: Retrieve a specific user by ID. Only authenticated users can access
        this endpoint.
      summary: Get User
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - Users
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: User retrieved successfully
        '401':
          description: Authentication required
        '404':
          description: Resource not found
components:
  schemas:
    LanguageEnum:
      enum:
      - abap
      - abnf
      - actionscript
      - actionscript3
      - ada
      - adl
      - agda
      - aheui
      - alloy
      - ambienttalk
      - amdgpu
      - ampl
      - androidbp
      - ansys
      - antlr
      - antlr-actionscript
      - antlr-cpp
      - antlr-csharp
      - antlr-java
      - antlr-objc
      - antlr-perl
      - antlr-python
      - antlr-ruby
      - apacheconf
      - apl
      - applescript
      - arduino
      - arrow
      - arturo
      - asc
      - asn1
      - aspectj
      - aspx-cs
      - aspx-vb
      - asymptote
      - augeas
      - autohotkey
      - autoit
      - awk
      - bare
      - basemake
      - bash
      - batch
      - bbcbasic
      - bbcode
      - bc
      - bdd
      - befunge
      - berry
      - bibtex
      - blitzbasic
      - blitzmax
      - blueprint
      - bnf
      - boa
      - boo
      - boogie
      - bqn
      - brainfuck
      - bst
      - bugs
      - c
      - c-objdump
      - ca65
      - cadl
      - camkes
      - capdl
      - capnp
      - carbon
      - cbmbas
      - cddl
      - ceylon
      - cfc
      - cfengine3
      - cfm
      - cfs
      - chaiscript
      - chapel
      - charmci
      - cheetah
      - cirru
      - clay
      - clean
      - clojure
      - clojurescript
      - cmake
      - cobol
      - cobolfree
      - codeql
      - coffeescript
      - comal
      - common-lisp
      - componentpascal
      - console
      - coq
      - cplint
      - cpp
      - cpp-objdump
      - cpsa
      - cr
      - crmsh
      - croc
      - cryptol
      - csharp
      - csound
      - csound-document
      - csound-score
      - css
      - css+django
      - css+genshitext
      - css+lasso
      - css+mako
      - css+mozpreproc
      - css+myghty
      - css+php
      - css+ruby
      - css+smarty
      - css+ul4
      - cuda
      - cypher
      - cython
      - d
      - d-objdump
      - dart
      - dasm16
      - dax
      - debcontrol
      - debian.sources
      - debsources
      - delphi
      - desktop
      - devicetree
      - dg
      - diff
      - django
      - docker
      - doscon
      - dpatch
      - dtd
      - duel
      - dylan
      - dylan-console
      - dylan-lid
      - earl-grey
      - easytrieve
      - ebnf
      - ec
      - ecl
      - eiffel
      - elixir
      - elm
      - elpi
      - emacs-lisp
      - email
      - erb
      - erl
      - erlang
      - evoque
      - execline
      - extempore
      - ezhil
      - factor
      - fan
      - fancy
      - felix
      - fennel
      - fift
      - fish
      - flatline
      - floscript
      - forth
      - fortran
      - fortranfixed
      - foxpro
      - freefem
      - fsharp
      - fstar
      - func
      - futhark
      - gap
      - gap-console
      - gas
      - gcode
      - gdscript
      - genshi
      - genshitext
      - gherkin
      - gleam
      - glsl
      - gnuplot
      - go
      - golo
      - gooddata-cl
      - googlesql
      - gosu
      - graphql
      - graphviz
      - groff
      - groovy
      - gsql
      - gst
      - haml
      - handlebars
      - hare
      - haskell
      - haxe
      - haxeml
      - hexdump
      - hlsl
      - hsail
      - hspec
      - html
      - html+cheetah
      - html+django
      - html+evoque
      - html+genshi
      - html+handlebars
      - html+lasso
      - html+mako
      - html+myghty
      - html+ng2
      - html+php
      - html+smarty
      - html+twig
      - html+ul4
      - html+velocity
      - http
      - hybris
      - hylang
      - i6t
      - icon
      - idl
      - idris
      - iex
      - igor
      - inform6
      - inform7
      - ini
      - io
      - ioke
      - irc
      - isabelle
      - j
      - jags
      - janet
      - jasmin
      - java
      - javascript
      - javascript+cheetah
      - javascript+django
      - javascript+lasso
      - javascript+mako
      - javascript+mozpreproc
      - javascript+myghty
      - javascript+php
      - javascript+ruby
      - javascript+smarty
      - jcl
      - jlcon
      - jmespath
      - js+genshitext
      - js+ul4
      - jsgf
      - jslt
      - json
      - json5
      - jsonld
      - jsonnet
      - jsp
      - jsx
      - julia
      - juttle
      - k
      - kal
      - kconfig
      - kmsg
      - koka
      - kotlin
      - kql
      - kuin
      - lasso
      - ldapconf
      - ldif
      - lean
      - lean4
      - less
      - lighttpd
      - lilypond
      - limbo
      - liquid
      - literate-agda
      - literate-cryptol
      - literate-haskell
      - literate-idris
      - livescript
      - llvm
      - llvm-mir
      - llvm-mir-body
      - logos
      - logtalk
      - lsl
      - lua
      - luau
      - macaulay2
      - make
      - mako
      - maple
      - maql
      - markdown
      - mask
      - mason
      - mathematica
      - matlab
      - matlabsession
      - maxima
      - mcfunction
      - mcschema
      - meson
      - mime
      - minid
      - miniscript
      - mips
      - modelica
      - modula2
      - mojo
      - monkey
      - monte
      - moocode
      - moonscript
      - mosel
      - mozhashpreproc
      - mozpercentpreproc
      - mql
      - mscgen
      - mupad
      - mxml
      - myghty
      - mysql
      - nasm
      - ncl
      - nemerle
      - nesc
      - nestedtext
      - newlisp
      - newspeak
      - ng2
      - nginx
      - nimrod
      - nit
      - nixos
      - nodejsrepl
      - notmuch
      - nsis
      - numba_ir
      - numpy
      - nusmv
      - objdump
      - objdump-nasm
      - objective-c
      - objective-c++
      - objective-j
      - ocaml
      - octave
      - odin
      - omg-idl
      - ooc
      - opa
      - openedge
      - openscad
      - org
      - output
      - pacmanconf
      - pan
      - parasail
      - pawn
      - pddl
      - peg
      - perl
      - perl6
      - phix
      - php
      - pig
      - pike
      - pkgconfig
      - plpgsql
      - pointless
      - pony
      - portugol
      - postgres-explain
      - postgresql
      - postscript
      - pot
      - pov
      - powershell
      - praat
      - procfile
      - prolog
      - promela
      - promql
      - properties
      - protobuf
      - prql
      - psql
      - psysh
      - ptx
      - pug
      - puppet
      - pwsh-session
      - py+ul4
      - py2tb
      - pycon
      - pypylog
      - pytb
      - python
      - python2
      - q
      - qbasic
      - qlik
      - qml
      - qvto
      - racket
      - ragel
      - ragel-c
      - ragel-cpp
      - ragel-d
      - ragel-em
      - ragel-java
      - ragel-objc
      - ragel-ruby
      - rbcon
      - rconsole
      - rd
      - reasonml
      - rebol
      - red
      - redcode
      - registry
      - rego
      - resourcebundle
      - restructuredtext
      - rexx
      - rhtml
      - ride
      - rita
      - rng-compact
      - roboconf-graph
      - roboconf-instances
      - robotframework
      - rql
      - rsl
      - ruby
      - rust
      - sarl
      - sas
      - sass
      - savi
      - scala
      - scaml
      - scdoc
      - scheme
      - scilab
      - scss
      - sed
      - sgf
      - shen
      - shexc
      - sieve
      - silver
      - singularity
      - slash
      - slim
      - slurm
      - smali
      - smalltalk
      - smarty
      - smithy
      - sml
      - snbt
      - snobol
      - snowball
      - solidity
      - sophia
      - sp
      - sparql
      - spec
      - spice
      - splus
      - sql
      - sql+jinja
      - sqlite3
      - squidconf
      - srcinfo
      - ssp
      - stan
      - stata
      - supercollider
      - swift
      - swig
      - systemd
      - systemverilog
      - tablegen
      - tact
      - tads3
      - tal
      - tap
      - tasm
      - tcl
      - tcsh
      - tcshcon
      - tea
      - teal
      - teratermmacro
      - termcap
      - terminfo
      - terraform
      - tex
      - text
      - thrift
      - ti
      - tid
      - tlb
      - tls
      - tnt
      - todotxt
      - toml
      - trac-wiki
      - trafficscript
      - treetop
      - tsql
      - tsx
      - turtle
      - twig
      - typescript
      - typoscript
      - typoscriptcssdata
      - typoscripthtmldata
      - typst
      - ucode
      - ul4
      - unicon
      - unixconfig
      - urbiscript
      - urlencoded
      - usd
      - vala
      - vb.net
      - vbscript
      - vcl
      - vclsnippets
      - vctreestatus
      - velocity
      - verifpal
      - verilog
      - vgl
      - vhdl
      - vim
      - visualprolog
      - visualprologgrammar
      - vue
      - vyper
      - wast
      - wdiff
      - webidl
      - wgsl
      - whiley
      - wikitext
      - wowtoc
      - wren
      - x10
      - xml
      - xml+cheetah
      - xml+django
      - xml+evoque
      - xml+lasso
      - xml+mako
      - xml+myghty
      - xml+php
      - xml+ruby
      - xml+smarty
      - xml+ul4
      - xml+velocity
      - xorg.conf
      - xpp
      - xquery
      - xslt
      - xtend
      - xul+mozpreproc
      - yaml
      - yaml+jinja
      - yang
      - yara
      - zeek
      - zephir
      - zig
      - zone
      type: string
      description: |-
        * `abap` - ABAP
        * `abnf` - ABNF
        * `actionscript` - ActionScript
        * `actionscript3` - ActionScript 3
        * `ada` - Ada
        * `adl` - ADL
        * `agda` - Agda
        * `aheui` - Aheui
        * `alloy` - Alloy
        * `ambienttalk` - AmbientTalk
        * `amdgpu` - AMDGPU
        * `ampl` - Ampl
        * `androidbp` - Soong
        * `ansys` - ANSYS parametric design language
        * `antlr` - ANTLR
        * `antlr-actionscript` - ANTLR With ActionScript Target
        * `antlr-cpp` - ANTLR With CPP Target
        * `antlr-csharp` - ANTLR With C# Target
        * `antlr-java` - ANTLR With Java Target
        * `antlr-objc` - ANTLR With ObjectiveC Target
        * `antlr-perl` - ANTLR With Perl Target
        * `antlr-python` - ANTLR With Python Target
        * `antlr-ruby` - ANTLR With Ruby Target
        * `apacheconf` - ApacheConf
        * `apl` - APL
        * `applescript` - AppleScript
        * `arduino` - Arduino
        * `arrow` - Arrow
        * `arturo` - Arturo
        * `asc` - ASCII armored
        * `asn1` - ASN.1
        * `aspectj` - AspectJ
        * `aspx-cs` - aspx-cs
        * `aspx-vb` - aspx-vb
        * `asymptote` - Asymptote
        * `augeas` - Augeas
        * `autohotkey` - autohotkey
        * `autoit` - AutoIt
        * `awk` - Awk
        * `bare` - BARE
        * `basemake` - Base Makefile
        * `bash` - Bash
        * `batch` - Batchfile
        * `bbcbasic` - BBC Basic
        * `bbcode` - BBCode
        * `bc` - BC
        * `bdd` - Bdd
        * `befunge` - Befunge
        * `berry` - Berry
        * `bibtex` - BibTeX
        * `blitzbasic` - BlitzBasic
        * `blitzmax` - BlitzMax
        * `blueprint` - Blueprint
        * `bnf` - BNF
        * `boa` - Boa
        * `boo` - Boo
        * `boogie` - Boogie
        * `bqn` - BQN
        * `brainfuck` - Brainfuck
        * `bst` - BST
        * `bugs` - BUGS
        * `c` - C
        * `c-objdump` - c-objdump
        * `ca65` - ca65 assembler
        * `cadl` - cADL
        * `camkes` - CAmkES
        * `capdl` - CapDL
        * `capnp` - Cap'n Proto
        * `carbon` - Carbon
        * `cbmbas` - CBM BASIC V2
        * `cddl` - CDDL
        * `ceylon` - Ceylon
        * `cfc` - Coldfusion CFC
        * `cfengine3` - CFEngine3
        * `cfm` - Coldfusion HTML
        * `cfs` - cfstatement
        * `chaiscript` - ChaiScript
        * `chapel` - Chapel
        * `charmci` - Charmci
        * `cheetah` - Cheetah
        * `cirru` - Cirru
        * `clay` - Clay
        * `clean` - Clean
        * `